Instruções: Para cada questão implementar métodos de acordo com as especificações apresentadas em aula. 
(Métodos com retorno, sem retorno, com parâmetros, etc.).

1) Para cada produto informado (nome, preço e quantidade), escreva o nome do produto comprado e o valor total a ser pago, considerando 
que são oferecidos descontos pelo número de unidades compradas. 
a. até 10 unidades: Valor total;
b: de 11 a 20 unidades: 10% de desconto;
c: de 21 a 50 unidades: 20% de desconto;
d: acima de 50 unidades: 25% de desconto;

2) Ao fazer exercícios físicos, você pode utilizar um monitor de frequência cardíaca para ver se sua frequência permanece dentro de um 
intervalo seguro sugerido pelos seus treinadores e médicos. Segundo a American Heart Association (AHA) 
(www.americanheart.org/presenter.jhtml?identifier=4736), a fórmula para calcular a frequência cardíaca máxima por minuto é 220 menos a 
idade em anos. Sua frequência cardíaca alvo é um intervalo entre 50-85% da sua frequência cardíaca máxima. [Observação: essas fórmulas são 
estimativas fornecidas pela AHA. As frequências cardíacas máximas e alvo podem variar com base na saúde, capacidade física e sexo da pessoa. 
Sempre consulte um médico ou profissional de saúde qualificado antes de começar ou modificar um programa de exercícios físicos.] 
Crie uma classe chamada HeartRates. Os atributos da classe devem incluir o nome, sobrenome e data de nascimento da pessoa 
(consistindo em atributos separados para mês, dia e ano de nascimento). Sua classe deve ter um construtor que receba esses dados como parâmetros.
Para cada atributo forneça métodos set e get. A classe também deve incluir um método que calcule e retorne a idade (em anos),
um que calcule e retorne a frequência cardíaca máxima e um que calcule e retorne a frequência cardíaca alvo da pessoa.
Escreva um aplicativo Java que solicite as informações da pessoa, instancie um objeto da classe HeartRates e imprima as
informações a partir desse objeto — incluindo nome, sobrenome e data de nascimento da pessoa — calcule e imprima a idade da pessoa (em anos),
seu intervalo de frequência cardíaca máxima e sua frequência cardíaca alvo.

3)Uma questão relacionada à assistência médica discutida ultimamente nos veículos de comunicação é a computadorização dos registros de saúde.
Essa possibilidade está sendo abordada de maneira cautelosa por causa de preocupações quanto à privacidade e à segurança de dados sigilosos, 
entre outros motivos. [Iremos discutir essas preocupações em exercícios posteriores.] A computadorização dos registros de saúde pode facilitar 
que pacientes compartilhem seus perfis e históricos de saúde entre vários profissionais de saúde. Isso talvez aprimore a qualidade da assistência 
médica, ajude a evitar conflitos e prescrições erradas de medicamentos, reduza custos em ambulatórios e salve vidas. Neste exercício, 
você projetará uma classe HealthProfile “inicial” para uma pessoa. Os atributos da classe devem incluir nome, sobrenome, sexo, data de nascimento 
(consistindo em atributos separados para mês, dia e ano de nascimento), altura (em metros) e peso (em quilogramas) da pessoa. 
Sua classe deve ter um construtor que receba esses dados. Para cada atributo, forneça métodos set e get. 
A classe também deve incluir métodos que calculem e retornem a idade do usuário em anos, intervalo de frequência cardíaca máxima e 
frequência cardíaca alvo (veja o Exercício 3.16), além de índice de massa corporal (IMC; veja o Exercício 2.33). Escreva um aplicativo 
Java que solicite as informações da pessoa, instancie um objeto da classe HealthProfile para ela e imprima as informações a partir desse 
objeto — incluindo nome, sobrenome, sexo, data de nascimento, altura e peso da pessoa ––, e então calcule e imprima a idade em anos, IMC, 
intervalo de frequência cardíaca máxima e frequência cardíaca alvo. 